\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{from} \PYG{n+nn}{time} \PYG{k+kn}{import} \PYG{n}{time}\PYG{p}{,} \PYG{n}{sleep}
\PYG{k+kn}{from} \PYG{n+nn}{logging} \PYG{k+kn}{import} \PYG{n}{getLogger}

\PYG{k+kn}{import} \PYG{n+nn}{uuid}

\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.context} \PYG{k+kn}{import} \PYG{n}{Context}
\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.wifi} \PYG{k+kn}{import} \PYG{n}{ApConfiguration}\PYG{p}{,} \PYG{n}{WifiSecurityType}
\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.cloud} \PYG{k+kn}{import} \PYG{n}{Message}\PYG{p}{,} \PYG{n}{Action}\PYG{p}{,} \PYG{n}{Response}\PYG{p}{,} \PYG{n}{PacketType}
\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.firmware} \PYG{k+kn}{import} \PYG{n}{FirmwareVersion}

\PYG{n}{LOGGER} \PYG{o}{=} \PYG{n}{getLogger}\PYG{p}{(}\PYG{n+nv+vm}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}}\PYG{p}{)}

\PYG{n}{TEST\PYGZus{}SSID} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}TEST\PYGZhy{}NETWORK\PYGZdq{}}
\PYG{n}{TEST\PYGZus{}PASSPHRASE} \PYG{o}{=} \PYG{l+s+s2}{\PYGZdq{}test\PYGZhy{}network\PYGZhy{}passphrase\PYGZdq{}}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}pairing}\PYG{p}{(}\PYG{n}{ctx}\PYG{p}{:} \PYG{n}{Context}\PYG{p}{):}
    \PYG{c+c1}{\PYGZsh{} avvio la connessione del Raspberry all\PYGZsq{}AP}
    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{wifi}\PYG{o}{.}\PYG{n}{client\PYGZus{}connect}\PYG{p}{()}

    \PYG{n}{sleep}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} chiedo lo stato al dispositivo}
    \PYG{n}{response} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{api}\PYG{o}{.}\PYG{n}{status}\PYG{p}{()}

    \PYG{c+c1}{\PYGZsh{} mi assicuro che la versione firmware del dispositivo sia quella da testare}
    \PYG{k}{assert} \PYG{n}{FirmwareVersion}\PYG{o}{.}\PYG{n}{from\PYGZus{}str}\PYG{p}{(}\PYG{n}{response}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}system\PYGZdq{}}\PYG{p}{][}\PYG{l+s+s2}{\PYGZdq{}fwVer\PYGZdq{}}\PYG{p}{])} \PYG{o}{==} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{firmware}\PYG{o}{.}\PYG{n}{version}

    \PYG{c+c1}{\PYGZsh{} effettuo la scansione Wi\PYGZhy{}Fi}
    \PYG{n}{response} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{api}\PYG{o}{.}\PYG{n}{wifi\PYGZus{}scan}\PYG{p}{()}

    \PYG{c+c1}{\PYGZsh{} mi assicuro che la scan restituisca almeno una rete}
    \PYG{k}{assert} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{response}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}

    \PYG{c+c1}{\PYGZsh{} invio la richiesta provision}
    \PYG{n}{ap\PYGZus{}config} \PYG{o}{=} \PYG{n}{ApConfiguration}\PYG{p}{(}
        \PYG{n}{ssid}\PYG{o}{=}\PYG{n}{TEST\PYGZus{}SSID}\PYG{p}{,}
        \PYG{n}{passphrase}\PYG{o}{=}\PYG{n}{TEST\PYGZus{}PASSPHRASE}\PYG{p}{,}
        \PYG{n}{security\PYGZus{}type}\PYG{o}{=}\PYG{n}{WifiSecurityType}\PYG{o}{.}\PYG{n}{WPA2}\PYG{p}{,}
        \PYG{n}{channel}\PYG{o}{=}\PYG{l+m+mi}{6}\PYG{p}{,}
    \PYG{p}{)}
    \PYG{n}{env\PYGZus{}id} \PYG{o}{=} \PYG{n}{uuid}\PYG{o}{.}\PYG{n}{uuid4}\PYG{p}{()}
    \PYG{n}{response} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{api}\PYG{o}{.}\PYG{n}{provision}\PYG{p}{(}\PYG{n}{ap\PYGZus{}config}\PYG{p}{,} \PYG{n}{env\PYGZus{}id}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n}{response}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}status\PYGZdq{}}\PYG{p}{]} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}success\PYGZdq{}}

    \PYG{c+c1}{\PYGZsh{} communto la raspberry in AP mode}
    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{wifi}\PYG{o}{.}\PYG{n}{start\PYGZus{}ap}\PYG{p}{(}\PYG{n}{ap\PYGZus{}config}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} attendo il primo messaggio su cloud}
    \PYG{n}{msg} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{receive}\PYG{p}{(}\PYG{n}{timeout}\PYG{o}{=}\PYG{l+m+mi}{60}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{action} \PYG{o}{==} \PYG{n}{Action}\PYG{o}{.}\PYG{n}{GET}

    \PYG{c+c1}{\PYGZsh{} invio una GET rejected al dispositivo device}
    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{publish}\PYG{p}{(}\PYG{n}{Message}\PYG{p}{(}
        \PYG{n}{action}\PYG{o}{=}\PYG{n}{Action}\PYG{o}{.}\PYG{n}{GET}\PYG{p}{,}
        \PYG{n}{response}\PYG{o}{=}\PYG{n}{Response}\PYG{o}{.}\PYG{n}{REJECTED}\PYG{p}{,}
        \PYG{n}{state}\PYG{o}{=}\PYG{p}{\PYGZob{}}
            \PYG{l+s+s2}{\PYGZdq{}clientToken\PYGZdq{}}\PYG{p}{:} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}clientToken\PYGZdq{}}\PYG{p}{],}
            \PYG{l+s+s2}{\PYGZdq{}timestamp\PYGZdq{}}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{time}\PYG{p}{()),}
            \PYG{l+s+s2}{\PYGZdq{}version\PYGZdq{}}\PYG{p}{:} \PYG{l+m+mi}{0}\PYG{p}{,}
            \PYG{l+s+s2}{\PYGZdq{}type\PYGZdq{}}\PYG{p}{:} \PYG{n}{PacketType}\PYG{o}{.}\PYG{n}{HEADER}\PYG{p}{,}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{))}

    \PYG{c+c1}{\PYGZsh{} mi aspetto ora un reported update}
    \PYG{n}{msg} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{receive}\PYG{p}{(}\PYG{n}{timeout}\PYG{o}{=}\PYG{l+m+mi}{5}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{action} \PYG{o}{==} \PYG{n}{Action}\PYG{o}{.}\PYG{n}{REPORTED\PYGZus{}UPDATE}

    \PYG{c+c1}{\PYGZsh{} la versione iniziale deve essere zero}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}version\PYGZdq{}}\PYG{p}{]} \PYG{o}{==} \PYG{l+m+mi}{0}

    \PYG{c+c1}{\PYGZsh{} il system id deve essere uguale all\PYGZsq{}env id}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}envId\PYGZdq{}}\PYG{p}{]} \PYG{o}{==} \PYG{n}{env\PYGZus{}id}\PYG{o}{.}\PYG{n}{bytes}

    \PYG{c+c1}{\PYGZsh{} la versione firmware deve corrispondere a quella in test}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}firmwareVersion\PYGZdq{}}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{==} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{firmware}\PYG{o}{.}\PYG{n}{version}\PYG{o}{.}\PYG{n}{major}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}firmwareVersion\PYGZdq{}}\PYG{p}{][}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{==} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{firmware}\PYG{o}{.}\PYG{n}{version}\PYG{o}{.}\PYG{n}{minor}
\end{Verbatim}
