\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kn}{from} \PYG{n+nn}{time} \PYG{k+kn}{import} \PYG{n}{sleep}\PYG{p}{,} \PYG{n}{time}
\PYG{k+kn}{import} \PYG{n+nn}{uuid}

\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.context} \PYG{k+kn}{import} \PYG{n}{Context}
\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.io} \PYG{k+kn}{import} \PYG{n}{LedColor}
\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.cloud} \PYG{k+kn}{import} \PYG{n}{JobState}\PYG{p}{,} \PYG{n}{Action}\PYG{p}{,} \PYG{n}{Message}\PYG{p}{,} \PYG{n}{Response}
\PYG{k+kn}{from} \PYG{n+nn}{fw\PYGZus{}test.firmware} \PYG{k+kn}{import} \PYG{n}{FirmwareVersion}

\PYG{k+kn}{from} \PYG{n+nn}{.utils} \PYG{k+kn}{import} \PYG{n}{TEST\PYGZus{}AP\PYGZus{}CONFIG}\PYG{p}{,} \PYG{n}{STATE\PYGZus{}MANUAL}


\PYG{k}{def} \PYG{n+nf}{test\PYGZus{}ota}\PYG{p}{(}\PYG{n}{ctx}\PYG{p}{:} \PYG{n}{Context}\PYG{p}{):}
    \PYG{c+c1}{\PYGZsh{} avvio la connessione del Raspberry all\PYGZsq{}AP}
    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{wifi}\PYG{o}{.}\PYG{n}{client\PYGZus{}connect}\PYG{p}{()}

    \PYG{n}{sleep}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} invio la richiesta provision}

    \PYG{n}{env\PYGZus{}id} \PYG{o}{=} \PYG{n}{uuid}\PYG{o}{.}\PYG{n}{uuid4}\PYG{p}{()}
    \PYG{n}{response} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{api}\PYG{o}{.}\PYG{n}{provision}\PYG{p}{(}\PYG{n}{TEST\PYGZus{}AP\PYGZus{}CONFIG}\PYG{p}{,} \PYG{n}{env\PYGZus{}id}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n}{response}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}status\PYGZdq{}}\PYG{p}{]} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}success\PYGZdq{}}

    \PYG{c+c1}{\PYGZsh{} communto la raspberry in AP mode}
    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{wifi}\PYG{o}{.}\PYG{n}{start\PYGZus{}ap}\PYG{p}{(}\PYG{n}{TEST\PYGZus{}AP\PYGZus{}CONFIG}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} attendo che il pairing abbia successo }
    \PYG{n}{msg} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{receive}\PYG{p}{(}\PYG{n}{timeout}\PYG{o}{=}\PYG{l+m+mi}{30}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{action} \PYG{o}{==} \PYG{n}{Action}\PYG{o}{.}\PYG{n}{GET}

    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{publish}\PYG{p}{(}\PYG{n}{Message}\PYG{p}{(}
        \PYG{n}{action}\PYG{o}{=}\PYG{n}{Action}\PYG{o}{.}\PYG{n}{GET}\PYG{p}{,}
        \PYG{n}{response}\PYG{o}{=}\PYG{n}{Response}\PYG{o}{.}\PYG{n}{ACCEPTED}\PYG{p}{,}
        \PYG{n}{state}\PYG{o}{=}\PYG{p}{\PYGZob{}}
            \PYG{o}{**}\PYG{n}{STATE\PYGZus{}MANUAL}\PYG{p}{,}
            \PYG{l+s+s2}{\PYGZdq{}clientToken\PYGZdq{}}\PYG{p}{:} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}clientToken\PYGZdq{}}\PYG{p}{],}
            \PYG{l+s+s2}{\PYGZdq{}timestamp\PYGZdq{}}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{time}\PYG{p}{()),}
            \PYG{l+s+s2}{\PYGZdq{}envId\PYGZdq{}}\PYG{p}{:} \PYG{n}{env\PYGZus{}id}\PYG{o}{.}\PYG{n}{bytes}\PYG{p}{,}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{))}
    \PYG{n}{sleep}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)}

    \PYG{k}{assert} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{io}\PYG{o}{.}\PYG{n}{status\PYGZus{}led\PYGZus{}color}\PYG{p}{()} \PYG{o}{==} \PYG{n}{LedColor}\PYG{o}{.}\PYG{n}{OFF}

    \PYG{n}{job} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{send\PYGZus{}ota}\PYG{p}{(}\PYG{n}{ctx}\PYG{o}{.}\PYG{n}{prev\PYGZus{}firmware}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} attendo che il dispositivo esegua il job e si ricolleghi}
    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{receive}\PYG{p}{(}\PYG{n}{timeout}\PYG{o}{=}\PYG{l+m+mi}{30}\PYG{p}{,} \PYG{n}{filter\PYGZus{}action}\PYG{o}{=}\PYG{n}{Action}\PYG{o}{.}\PYG{n}{GET}\PYG{p}{)}
    \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{publish}\PYG{p}{(}\PYG{n}{Message}\PYG{p}{(}
        \PYG{n}{action}\PYG{o}{=}\PYG{n}{Action}\PYG{o}{.}\PYG{n}{GET}\PYG{p}{,}
        \PYG{n}{response}\PYG{o}{=}\PYG{n}{Response}\PYG{o}{.}\PYG{n}{ACCEPTED}\PYG{p}{,}
        \PYG{n}{state}\PYG{o}{=}\PYG{p}{\PYGZob{}}
            \PYG{o}{**}\PYG{n}{STATE\PYGZus{}MANUAL}\PYG{p}{,}
            \PYG{l+s+s2}{\PYGZdq{}clientToken\PYGZdq{}}\PYG{p}{:} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}clientToken\PYGZdq{}}\PYG{p}{],}
            \PYG{l+s+s2}{\PYGZdq{}timestamp\PYGZdq{}}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{time}\PYG{p}{()),}
            \PYG{l+s+s2}{\PYGZdq{}envId\PYGZdq{}}\PYG{p}{:} \PYG{n}{env\PYGZus{}id}\PYG{o}{.}\PYG{n}{bytes}\PYG{p}{,}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{))}

    \PYG{c+c1}{\PYGZsh{} su cloud arriva la nuova versione }
    \PYG{n}{msg} \PYG{o}{=} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{receive}\PYG{p}{(}\PYG{n}{timeout}\PYG{o}{=}\PYG{l+m+mi}{30}\PYG{p}{)}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{action} \PYG{o}{==} \PYG{n}{Action}\PYG{o}{.}\PYG{n}{REPORTED\PYGZus{}UPDATE}

    \PYG{c+c1}{\PYGZsh{} la versione firmware deve corrispondere a quella in test}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}firmwareVersion\PYGZdq{}}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{==} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{prev\PYGZus{}firmware}\PYG{o}{.}\PYG{n}{version}\PYG{o}{.}\PYG{n}{major}
    \PYG{k}{assert} \PYG{n}{msg}\PYG{o}{.}\PYG{n}{state}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}firmwareVersion\PYGZdq{}}\PYG{p}{][}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{==} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{prev\PYGZus{}firmware}\PYG{o}{.}\PYG{n}{version}\PYG{o}{.}\PYG{n}{minor}

    \PYG{c+c1}{\PYGZsh{} il job ha avuto successo}
    \PYG{k}{assert} \PYG{n}{ctx}\PYG{o}{.}\PYG{n}{cloud}\PYG{o}{.}\PYG{n}{job\PYGZus{}state}\PYG{p}{(}\PYG{n}{job}\PYG{p}{)} \PYG{o}{==} \PYG{n}{JobState}\PYG{o}{.}\PYG{n}{SUCCEEDED}
\end{Verbatim}
